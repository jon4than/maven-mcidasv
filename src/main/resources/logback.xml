<!-- 
  the "configuration" element accepts three optional parameters:

  debug: generates some SLF4J debug; acceptable values are "true" or "false".
         defaults to "false".

  scan and scanPeriod: these options allow you to configure Logback to watch
  your logback.xml file for any changes and will reload if anything is different.
  
  please see the Logback autoscanning documentation:
  http://logback.qos.ch/manual/configuration.html#autoScan
 -->
 <!-- <configuration debug="true" scan="true" scanPeriod="5 seconds"> -->
<configuration debug="false">

  <!-- disable default logback status messsages; comment this out to debug
       logging issues (and consider switching the uncommented configuration tag
       for the one that is commented!). -->
  <statusListener class="ch.qos.logback.core.status.NopStatusListener" />

  <!-- make sure logback levels get propagated to java.util.logging -->
  <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
    <resetJUL>true</resetJUL>
  </contextListener>

  <!--  sets up a rotating mcidasv.log. every time mcidasv is started will
        check for a mcidasv.log file in the userpath. if one exists, the 
        file will be moved into the "logs" subdirectory of the userpath and
        be given a name conforming to "mcidasv_yyyyMMdd_HHmmss.log".
        
        If you are using autoscanning, be aware that any reloads will result
        in mcidasv.log being rolled. Just like a normal startup!
        
        currently the last 10 log files are being kept -->
  <appender name="FILE" class="edu.wisc.ssec.mcidasv.util.UserpathRollingFileAppender">
    <file>${mcv.logpath}</file>
    <!-- <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> -->
    <rollingPolicy class="edu.wisc.ssec.mcidasv.util.TailFriendlyRollingPolicy">
      <fileNamePattern>${mcv.userpath}/archived_logs/mcidasv_%d{yyyyMMdd}_%d{HHmmss,aux}.log</fileNamePattern>
      <maxHistory>10</maxHistory>
      <TimeBasedFileNamingAndTriggeringPolicy class="edu.wisc.ssec.mcidasv.util.StartupTriggeringPolicy" />
    </rollingPolicy>
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %method: %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%msg</pattern>
    </encoder>
  </appender>

  <!-- <appender name="JYTHON" class="ch.qos.logback.core.FileAppender">
    <file>${mcv.userpath}/mcidasv.log</file>
    <prudent>true</prudent>
    <encoder>
      <pattern># %d{HH:mm:ss.SSS} [%thread] %level:%n%msg%n</pattern>
    </encoder>
  </appender> -->

  <!-- you can override the root level for specific packages -->
  <!-- <logger name="edu.wisc.ssec.mcidasv" level="TRACE"/> -->

  <!-- use the logging level specified by the "loglevel" Java system property.
       if the "loglevel" property was not set, logging will only listen for 
       things at "INFO" level within mcv (by default)
       
       valid levels are: TRACE, DEBUG, INFO, WARN, ERROR, OFF
       be sure to skim over http://logback.qos.ch/manual/architecture.html#basic_selection -->
  <root level="${loglevel:-INFO}">
    <appender-ref ref="FILE" />
  </root>

  <logger name="mcvstdout" level="INFO" additivity="false">
    <appender-ref ref="STDOUT" />
  </logger>

  <!-- Disable some initial status messages from the stdout/stderr redirect library -->
  <logger name="uk.org.lidalia.sysoutslf4j" level="OFF" />
  
  <!-- Let's use this section of the file to group loggers that spew *way* too much output. -->
  <logger name="java" level="OFF" />
  <logger name="sun" level="OFF" />
  <logger name="javax" level="OFF" />
  <logger name="j3d" level="OFF" />
  <logger name="httpclient.wire.content" level="OFF" />
  <logger name="org.apache.commons.httpclient" level="OFF" />
  <logger name="org.bushe.swing.event" level="OFF" />
  <logger name="ucar.grib" level="OFF" />
  <logger name="org.python" level="OFF" />
  <logger name="httpclient" level="OFF" />
  <logger name="edu.wisc.ssec.mcidas.adde.AddeServerInfo" level="OFF" />
  <logger name="edu.wisc.ssec.mcidas.adde.AddeTextReader" level="OFF" />
  <logger name="edu.wisc.ssec.mcidas.adde.DataSetInfo" level="OFF" />
  <logger name="net.sf.ehcache" level="OFF" />
  <!-- End of verbose logger section -->
</configuration>
